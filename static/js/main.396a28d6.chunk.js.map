{"version":3,"sources":["components/ImageCard.js","components/ImageSearch.js","App.js","index.js"],"names":["ImageCard","image","tags","split","className","src","webformatURL","alt","user","views","downloads","likes","map","tag","index","ImageSearch","searchText","useState","text","setText","onSubmit","e","preventDefault","onChange","target","value","type","placeholder","App","images","setImages","isLoading","setIsLoading","term","setTerm","useEffect","fetch","process","then","res","json","data","hits","catch","err","console","log","length","id","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mNAsCeA,MApCf,YAA+B,IAAVC,EAAS,EAATA,MACfC,EAAOD,EAAMC,KAAKC,MAAM,KAE1B,OACI,sBAAKC,UAAU,6CAAf,UACF,qBAAKC,IAAKJ,EAAMK,aAAcC,IAAI,GAAGH,UAAU,WAC/C,sBAAKA,UAAU,YAAf,UACE,sBAAKA,UAAU,yCAAf,sBACcH,EAAMO,QAEpB,+BACE,+BACE,6CACCP,EAAMQ,SAET,+BACE,iDACCR,EAAMS,aAET,+BACE,6CACCT,EAAMU,eAIb,qBAAKP,UAAU,YAAf,SACEF,EAAKU,KAAI,SAACC,EAAMC,GAAP,OACL,uBAAkBV,UAAU,4FAA5B,cACES,IADSC,YCLRC,MAtBf,YAAsC,IAAfC,EAAc,EAAdA,WAAc,EACbC,mBAAS,IADI,mBAC9BC,EAD8B,KACxBC,EADwB,KASjC,OACI,qBAAKf,UAAU,iDAAf,SACI,sBAAMgB,SARD,SAACC,GACdA,EAAEC,iBAEFN,EAAWE,IAKuBd,UAAU,kBAApC,SACI,sBAAKA,UAAU,6DAAf,UACI,uBAAOmB,SAAU,SAAAF,GAAC,OAAIF,EAAQE,EAAEG,OAAOC,QAAQrB,UAAU,kHAAkHsB,KAAK,OAChLC,YAAY,yBACZ,wBAAQvB,UAAU,kIAAkIsB,KAAK,SAAzJ,4BCkBLE,MA/Bf,WAAgB,IAAD,EACaX,mBAAS,IADtB,mBACRY,EADQ,KACAC,EADA,OAEmBb,oBAAS,GAF5B,mBAERc,EAFQ,KAEGC,EAFH,OAGSf,mBAAS,IAHlB,mBAGRgB,EAHQ,KAGFC,EAHE,KAeb,OAVFC,qBAAU,WACRC,MAAM,gCAAD,OAAiCC,qCAAjC,cAA4EJ,EAA5E,kCACFK,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJX,EAAUW,EAAKC,MACfV,GAAa,MAEdW,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QAC3B,CAACX,IAGA,sBAAK7B,UAAU,oBAAf,UACE,cAAC,EAAD,CAAaY,WAAY,SAACE,GAAD,OAAUgB,EAAQhB,OAGzCa,GAA+B,IAAlBF,EAAOkB,QAAgB,oBAAI3C,UAAU,uBAAd,6BACrC2B,EAAY,oBAAI3B,UAAU,uBAAd,wBAAuD,qBAAKA,UAAU,yBAAf,SACjEyB,EAAOjB,KAAI,SAAAX,GAAK,OACf,cAAC,EAAD,CAA0BA,MAAOA,GAAjBA,EAAM+C,aCtBhCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.396a28d6.chunk.js","sourcesContent":["import React from 'react';\n\nfunction ImageCard({ image }) {\nconst tags = image.tags.split(',');\n\n    return (\n        <div className=\"max-w-sm rounder overflow-hidden shadow-lg\">\n      <img src={image.webformatURL} alt=\"\" className=\"w-full\" /> \n      <div className=\"px-6 py-4\">\n        <div className=\"font-bold text-purple-500 text-xl mb-2\">\n            Photo by {image.user}\n        </div>\n        <ul>\n          <li>\n            <strong>Views: </strong>\n            {image.views}\n          </li>\n          <li>\n            <strong>Downloads: </strong>\n            {image.downloads}\n          </li>\n          <li>\n            <strong>Likes: </strong>\n            {image.likes}\n          </li>\n        </ul>\n      </div>\n      <div className=\"px-6 py-4\">\n       {tags.map((tag , index) => (\n            <span key={index} className=\"inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2 \">  \n            #{tag}\n          </span>\n       ))}\n      </div>\n    </div>\n    )\n}\n\nexport default ImageCard;\n","import React, { useState } from 'react';\n\nfunction ImageSearch({ searchText }) {\nconst [text, setText] = useState('');\n\nconst onSubmit = (e) => {\n    e.preventDefault();\n\n    searchText(text);\n}\n\n    return (\n        <div className='max-w-sm rounded overflow-hidden my-10 mx-auto'>\n            <form onSubmit={onSubmit} className=\"w-full max-w-sm\">\n                <div className=\"flex items-center border-b border-b-2 border-teal-500 py-2\">\n                    <input onChange={e => setText(e.target.value)} className=\"appearance-none bg-transparent border-none w-full text-gray-700 mr-3 py-1 px-2 leading-tight focus:outline-none\" type=\"text\"\n                    placeholder=\"Search Image Term...\" />\n                    <button className=\"flex-shrink-0 bg-teal-500 hover:bg-teal-700 border-teal-500 hover:border-teal-700 text-sm border-4 text-white py-1 px-2 rounded\" type=\"submit\">Search</button>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport default ImageSearch;\n","import React, { useState, useEffect } from 'react';\nimport ImageCard from './components/ImageCard';\nimport ImageSearch from './components/ImageSearch';\n\nfunction App() {\nconst [images, setImages] = useState([]);\nconst [isLoading, setIsLoading] = useState(true);\nconst [term, setTerm] = useState('');\n\nuseEffect(() => {\n  fetch(`https://pixabay.com/api/?key=${process.env.REACT_APP_PIXABAY_API_KEY}&q=${term}&image_type=photo&pretty=true`)\n    .then(res => res.json())\n    .then(data => {\n      setImages(data.hits);\n      setIsLoading(false);\n    })\n    .catch(err => console.log(err));\n}, [term]);\n\n  return (\n    <div className=\"container mx-auto\">\n      <ImageSearch searchText={(text) => setTerm(text)} />\n\n\n      {!isLoading && images.length === 0 && <h1 className=\"text-6xl text-center\">No Images Found</h1> }\n      {isLoading ? <h1 className=\"text-6xl text-center\">Loading...</h1> : <div className=\"grid grid-cols-3 gap-4\">\n        {images.map(image => (\n          <ImageCard key={image.id} image={image} />\n        ))}\n      </div>}\n    </div>\n    \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/main.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}